{"version":3,"sources":["features/userSlice.js","components/Blogs.jsx","components/HomePage.jsx","components/NavHome.jsx","App.js","app/store.js","index.js"],"names":["userSlice","createSlice","name","initialState","isSignedIn","userData","searchInput","blogData","reducers","setSignedIn","state","action","payload","setUserData","setInput","setBlogData","actions","selectSignedIn","user","selectUserData","selectUserInput","Blogs","useSelector","blog_url","process","dispatch","useDispatch","useState","blogs","setBlogs","loading","setloading","useEffect","axios","get","then","response","data","console","log","catch","error","className","Spinner","animation","role","articles","map","blog","index","href","url","target","src","image","alt","source","publishedAt","title","description","totalArticles","HomePage","login","profileObj","style","display","clientId","render","renderProps","onClick","disabled","onSuccess","onFailure","cookiePolicy","NavHome","inputValue","setInputValue","Navbar","bg","expand","variant","Container","Brand","Toggle","Collapse","id","Nav","Link","Form","FormControl","type","placeholder","onChange","e","value","Button","preventDefault","Avatar","imageUrl","givenName","onLogoutSuccess","App","configureStore","reducer","userReducer","ReactDOM","store","StrictMode","document","getElementById"],"mappings":"qNAEMA,EAAYC,YAAY,CAC1BC,KAAM,OACNC,aAAa,CACTC,YAAY,EACZC,SAAU,KACVC,YAAa,OACbC,SAAU,MAEdC,SAAS,CACLC,YAAY,SAACC,EAAOC,GAChBD,EAAMN,WAAaO,EAAOC,SAE9BC,YAAY,SAACH,EAAOC,GAChBD,EAAML,SAAWM,EAAOC,SAE5BE,SAAS,SAACJ,EAAOC,GACbD,EAAMJ,YAAcK,EAAOC,SAE/BG,YAAY,SAACL,EAAOC,GAChBD,EAAMH,SAAWI,EAAOC,YAK7B,EAIUZ,EAAUgB,QAHvBP,EADG,EACHA,YACAM,EAFG,EAEHA,YACAF,EAHG,EAGHA,YACAC,EAJG,EAIHA,SAESG,EAAiB,SAACP,GAAD,OAAWA,EAAMQ,KAAKd,YACvCe,EAAiB,SAACT,GAAD,OAAWA,EAAMQ,KAAKb,UACvCe,EAAkB,SAACV,GAAD,OAAWA,EAAMQ,KAAKZ,aAGtCN,IAAf,Q,eC2CeqB,EA1ED,WAAO,IAAD,EAEVf,EAAcgB,YAAYF,GAE1BG,EAAQ,UAAMC,0BAAN,qBAAiDlB,EAAjD,kBAAsEkB,oCAC9EC,EAAWC,cACjB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,qBAAU,WACNC,IAAMC,IAAIX,GACTY,MAAK,SAACC,GACHL,GAAW,GACXN,EAASV,EAAYqB,EAASC,OAC9BR,EAASO,EAASC,MAClBN,GAAW,GACXO,QAAQC,IAAIH,EAASC,SAExBG,OAAM,SAACC,GACJH,QAAQC,IAAIE,QAEjB,CAACnC,IAIA,mCACI,qBAAKoC,UAAU,YAAf,SACI,sBAAKA,UAAU,UAAf,UACI,oBAAIA,UAAU,OAAd,kBAEIZ,EACI,qBAAKY,UAAU,cAAf,SACI,cAACC,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAjC,SACI,sBAAMH,UAAU,oBAAhB,4BAKZ,mCACI,qBAAKA,UAAU,MAAf,gBACMd,QADN,IACMA,GADN,UACMA,EAAOkB,gBADb,aACM,EAAiBC,KAAI,SAACC,EAAMC,GAAP,OACnB,mCACC,qBAAiBP,UAAU,wBAA3B,SACO,qBAAKA,UAAU,iBAAf,SACI,oBAAGQ,KAAMF,EAAKG,IAAKC,OAAO,SAA1B,UACI,qBAAKC,IAAKL,EAAKM,MAAOC,IAAKP,EAAK9C,OAChC,sBAAKwC,UAAU,cAAf,UACI,+BACI,+BAAOM,EAAKQ,OAAOtD,OACnB,uBAAOwC,UAAU,OAAjB,SAAyBM,EAAKS,iBAElC,6BAAKT,EAAKU,QACV,4BAAIV,EAAKW,uBAVlBV,YAsBD,KAApB,OAALrB,QAAK,IAALA,OAAA,EAAAA,EAAOgC,gBACJ,0EAA6CtD,EAA7C,+D,iBCzBTuD,EA1CE,WAEZ,IAAMpC,EAAWC,cAEZoC,EAAQ,SAAC1B,GACXE,QAAQC,IAAIH,GACZX,EAAShB,GAAY,IACrBgB,EAASZ,EAAYuB,EAAS2B,cAG5B3D,EAAakB,YAAYL,GAG/B,OAFAqB,QAAQC,IAAInC,GAGR,qBAAKsC,UAAU,YAAYsB,MAAO,CAAEC,QAAS7D,EAAa,OAAS,SAAnE,UACMA,GACE,sBAAKsC,UAAU,qCAAf,UACI,uDAAyB,uBAAzB,cACA,6OAEA,cAAC,IAAD,CACIwB,SAAU1C,2EACV2C,OAAQ,SAACC,GAAD,OACJ,wBAAQC,QAASD,EAAYC,QACzBC,SAAUF,EAAYE,SACtB5B,UAAU,gBAFd,gCAOJ6B,UAAWT,EACXU,UAAWV,EACX1D,YAAY,EACZqE,aAAc,6B,8DC6CvBC,EA3EC,WACZ,IAAMtE,EAAakB,YAAYL,GAC/B,EAAoCU,mBAAS,IAA7C,mBAAOgD,EAAP,KAAmBC,EAAnB,KACMvE,EAAWiB,YAAYH,GAEvBM,EAAWC,cAajB,OACI,mCACI,cAACmD,EAAA,EAAD,CAAQC,GAAG,OAAOC,OAAO,KAAKC,QAAQ,OAAtC,SACI,eAACC,EAAA,EAAD,WACI,cAACJ,EAAA,EAAOK,MAAR,CAAchC,KAAK,QAAnB,2BACE9C,EACE,qCACC,cAACyE,EAAA,EAAOM,OAAR,CAAe,gBAAc,qBAC1B,eAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,mBAApB,UACI,eAACC,EAAA,EAAD,CAAK5C,UAAU,UAAf,UACI,cAAC4C,EAAA,EAAIC,KAAL,CAAUrC,KAAK,QAAf,kBACA,eAACsC,EAAA,EAAD,CAAM9C,UAAU,SAAhB,UACI,cAAC+C,EAAA,EAAD,CACIC,KAAK,SACLC,YAAahB,EACbjC,UAAU,OACV,aAAW,SACXkD,SAAU,SAACC,GAAD,OAAOjB,EAAciB,EAAEzC,OAAO0C,QACxCA,MAAOnB,IAEX,cAACoB,EAAA,EAAD,CAAQ1B,QA/BxB,SAACwB,GACjBA,EAAEG,iBACFvE,EAASX,EAAS6D,IAClBC,EAAc,KA4BgDI,QAAQ,kBAAtC,0BAGR,eAACM,EAAA,EAAD,CAAK5C,UAAU,UAAf,UACI,cAAEuD,EAAA,EAAF,CAAS5C,IAAG,OAAEhD,QAAF,IAAEA,OAAF,EAAEA,EAAU6F,SAAU3C,IAAG,OAAElD,QAAF,IAAEA,OAAF,EAAEA,EAAUH,KAAMwC,UAAU,WACjE,uBAAOA,UAAU,4BAAjB,gBAA8CrC,QAA9C,IAA8CA,OAA9C,EAA8CA,EAAU8F,YACxD,cAAC,eAAD,CAAcjC,SAAU1C,2EACpB2C,OAAQ,SAACC,GAAD,OACJ,wBAAQC,QAASD,EAAYC,QACzBC,SAAUF,EAAYE,SACtB5B,UAAU,gBAFd,qBAOJ0D,gBAxCrB,SAAChE,GACZX,EAASZ,EAAY,OACrBY,EAAShB,GAAY,gBA4CD,qCACI,cAACoE,EAAA,EAAOM,OAAR,CAAe,gBAAc,qBAC7B,cAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,mBAApB,SACI,cAACC,EAAA,EAAD,CAAK5C,UAAU,UAAf,SACI,oBAAIA,UAAU,aAAd,4DCnDzB2D,EAbH,WAEV,IAAMjG,EAAckB,YAAYL,GAEhC,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACEb,GAAc,cAAC,EAAD,QCZPkG,cAAe,CAC1BC,QAAQ,CACJrF,KAAMsF,KCGdC,IAAStC,OACP,cAAC,IAAD,CAAUuC,MAAOA,EAAjB,SACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAIJC,SAASC,eAAe,W","file":"static/js/main.4a6db735.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst userSlice = createSlice({\r\n    name: 'user',\r\n    initialState:{\r\n        isSignedIn: false,\r\n        userData: null,\r\n        searchInput: \"tech\",\r\n        blogData: null,\r\n    },\r\n    reducers:{\r\n        setSignedIn:(state, action) =>{\r\n            state.isSignedIn = action.payload;\r\n        },\r\n        setUserData:(state, action) =>{\r\n            state.userData = action.payload\r\n        },\r\n        setInput:(state, action)=>{\r\n            state.searchInput = action.payload\r\n        },\r\n        setBlogData:(state, action)=>{\r\n            state.blogData = action.payload\r\n        }\r\n    },\r\n});\r\n\r\nexport const { \r\n    setSignedIn , \r\n    setBlogData, \r\n    setUserData, \r\n    setInput } = userSlice.actions;\r\n\r\nexport const selectSignedIn = (state) => state.user.isSignedIn;\r\nexport const selectUserData = (state) => state.user.userData;\r\nexport const selectUserInput = (state) => state.user.searchInput;\r\nexport const selectBlogData = (state) => state.user.blogData;\r\n\r\nexport default userSlice.reducer;","import axios from 'axios';\r\nimport React , {useState , useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectUserInput, setBlogData } from '../features/userSlice'\r\nimport Spinner from 'react-bootstrap/Spinner'\r\n\r\nconst Blogs = () => {\r\n\r\n    const searchInput = useSelector(selectUserInput);\r\n\r\n    const blog_url = `${process.env.REACT_APP_BLOG_URL}/search?q=${searchInput}&token=${process.env.REACT_APP_BLOG_ID}`;\r\n    const dispatch = useDispatch();\r\n    const [blogs, setBlogs] = useState('');\r\n\r\n    const [loading, setloading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        axios.get(blog_url)\r\n        .then((response) => {\r\n            setloading(true)\r\n            dispatch(setBlogData(response.data))\r\n            setBlogs(response.data)\r\n            setloading(false)\r\n            console.log(response.data);\r\n        })\r\n        .catch((error) =>{\r\n            console.log(error);\r\n        })\r\n    }, [searchInput])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\">\r\n                <div className=\"blog_pg\">\r\n                    <h1 className='mt-5'>Blog</h1>\r\n                    {\r\n                        loading ? \r\n                            <div className=\"text-center\">\r\n                                <Spinner animation=\"border\" role=\"status\">\r\n                                    <span className=\"visually-hidden r\">Loading...</span>\r\n                                </Spinner>\r\n                            </div>\r\n                            \r\n                        : \r\n                        <>\r\n                            <div className=\"row\">                            \r\n                                { blogs?.articles?.map((blog, index) => (\r\n                                    <>\r\n    \t                                <div key={index} className=\"col-lg-4 blog_content\">\r\n                                            <div className=\"blog_container\">\r\n                                                <a href={blog.url} target='_blank'>\r\n                                                    <img src={blog.image} alt={blog.name} />\r\n                                                    <div className=\"content p-3\">\r\n                                                        <h6>\r\n                                                            <span>{blog.source.name}</span>\r\n                                                            <small className='ps-2'>{blog.publishedAt}</small>\r\n                                                        </h6>\r\n                                                        <h4>{blog.title}</h4>\r\n                                                        <p>{blog.description}</p>\r\n                                                    </div>\r\n                                                   \r\n                                                </a>\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                    </>\r\n                                ))}\r\n                            </div>\r\n                        </>\r\n                    }\r\n                    {blogs?.totalArticles === 0 && (\r\n                        <h2>!Oops, No blogs currently available for {searchInput} ðŸ˜¢. please search for something else. </h2>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Blogs\r\n","import React from 'react'\r\nimport GoogleLogin from 'react-google-login'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectSignedIn, setSignedIn, setUserData } from '../features/userSlice';\r\n\r\nconst HomePage = () => {\r\n\r\n     const dispatch = useDispatch();\r\n\r\n    const login = (response) => {\r\n        console.log(response);\r\n        dispatch(setSignedIn(true));\r\n        dispatch(setUserData(response.profileObj));\r\n    }\r\n\r\n    const isSignedIn = useSelector(selectSignedIn)\r\n    console.log(isSignedIn);\r\n\r\n    return (\r\n        <div className='home_page' style={{ display: isSignedIn ? 'none' : 'block' }}>\r\n            {!isSignedIn &&\r\n                <div className=\"container home_message text-center\">\r\n                    <h1>Your favourite place <br /> to read</h1>\r\n                    <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. A nulla magnam laborum veritatis deserunt saepe aperiam unde, cumque quasi eaque commodi error laudantium vel modi possimus dicta minus, illum rem.</p>\r\n                     \r\n                    <GoogleLogin\r\n                        clientId={process.env.REACT_APP_CLIENT_ID}\r\n                        render={(renderProps) => (\r\n                            <button onClick={renderProps.onClick}\r\n                                disabled={renderProps.disabled}\r\n                                className='btn btn_login'\r\n                            >\r\n                                Login with Google\r\n                            </button>\r\n                        )}\r\n                        onSuccess={login}\r\n                        onFailure={login}\r\n                        isSignedIn={true}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />\r\n                </div>\r\n                 \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage\r\n","import React , {useState} from 'react';\r\nimport { Navbar , Container , Nav , Form, FormControl , Button } from 'react-bootstrap'\r\nimport { selectSignedIn, selectUserData , setInput, setSignedIn, setUserData } from '../features/userSlice';\r\nimport {  useSelector, useDispatch } from 'react-redux';\r\nimport { GoogleLogout } from 'react-google-login';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\n\r\nconst NavHome = () => {\r\n    const isSignedIn = useSelector(selectSignedIn);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const userData = useSelector(selectUserData);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n        dispatch(setInput(inputValue))\r\n        setInputValue('')\r\n    }\r\n\r\n    const logout = (response) => {\r\n        dispatch(setUserData(null));\r\n        dispatch(setSignedIn(false))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navbar bg=\"dark\" expand=\"lg\" variant='dark'>\r\n                <Container>\r\n                    <Navbar.Brand href=\"#home\">Lavender Blog</Navbar.Brand>\r\n                    { isSignedIn ? \r\n                        <>\r\n                         <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                                <Nav className=\"me-auto\">\r\n                                    <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                                    <Form className=\"d-flex\">\r\n                                        <FormControl\r\n                                            type=\"search\"\r\n                                            placeholder={inputValue}\r\n                                            className=\"mr-2\"\r\n                                            aria-label=\"Search\"\r\n                                            onChange={(e) => setInputValue(e.target.value)}\r\n                                            value={inputValue}\r\n                                        />\r\n                                        <Button onClick={handleClick} variant=\"outline-success\">Search</Button>\r\n                                    </Form>\r\n                                </Nav>\r\n                                <Nav className='ms-auto'>\r\n                                    < Avatar src={userData?.imageUrl} alt={userData?.name} className='avatar' />\r\n                                    <small className='text-white me-4 mt-2 ms-2'>{userData?.givenName}</small>\r\n                                    <GoogleLogout clientId={process.env.REACT_APP_CLIENT_ID}\r\n                                        render={(renderProps) => (\r\n                                            <button onClick={renderProps.onClick}\r\n                                                disabled={renderProps.disabled}\r\n                                                className='btn btn_login'\r\n                                            >\r\n                                                logout \r\n                                            </button>\r\n                                        )}\r\n                                        onLogoutSuccess={logout}\r\n                                    />\r\n                                </Nav>\r\n                            </Navbar.Collapse>\r\n                        </>\r\n                        : \r\n                            <>\r\n                                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                                    <Nav className='ms-auto'>\r\n                                        <h5 className='text-white'>User not available ðŸ˜ž</h5>   \r\n                                    </Nav>\r\n                                </Navbar.Collapse>                            \r\n                            </>\r\n                            }\r\n                   \r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default NavHome\r\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Blogs from './components/Blogs'\nimport HomePage from './components/HomePage'\nimport NavHome from './components/NavHome'\nimport { selectSignedIn } from './features/userSlice'\n\nconst App = () => {\n\n  const isSignedIn =  useSelector(selectSignedIn)\n\n  return (\n    <div>\n      <NavHome/>\n      <HomePage/> \n      { isSignedIn && <Blogs/>}\n    </div>\n  )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n    reducer:{\r\n        user: userReducer,\r\n    }\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './app/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}